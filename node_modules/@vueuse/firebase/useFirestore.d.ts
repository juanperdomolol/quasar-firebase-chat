import firebase from 'firebase';
import { Ref } from 'vue-demi';

interface FirestoreOptions {
    errorHandler?: (err: Error) => void;
    autoDispose?: boolean;
}
declare type FirebaseDocRef<T> = firebase.firestore.Query<T> | firebase.firestore.DocumentReference<T>;
declare function useFirestore<T extends firebase.firestore.DocumentData>(docRef: firebase.firestore.DocumentReference<T>, initialValue: T, options?: FirestoreOptions): Ref<T | null>;
declare function useFirestore<T extends firebase.firestore.DocumentData>(docRef: firebase.firestore.Query<T>, initialValue: T[], options?: FirestoreOptions): Ref<T[]>;
declare function useFirestore<T extends firebase.firestore.DocumentData>(docRef: firebase.firestore.DocumentReference<T>, initialValue?: T | undefined, options?: FirestoreOptions): Ref<T | undefined | null>;
declare function useFirestore<T extends firebase.firestore.DocumentData>(docRef: firebase.firestore.Query<T>, initialValue?: T[], options?: FirestoreOptions): Ref<T[] | undefined>;

export { FirebaseDocRef, FirestoreOptions, useFirestore };
